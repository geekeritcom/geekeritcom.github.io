<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GeekerHub</title>
  
  <subtitle>信任 承诺 关怀</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-24T10:21:51.685Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黑与白</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis基础数据结构之SortedSet有序集合</title>
    <link href="http://yoursite.com/2019/01/24/SortedSet/"/>
    <id>http://yoursite.com/2019/01/24/SortedSet/</id>
    <published>2019-01-24T10:46:14.000Z</published>
    <updated>2019-01-24T10:21:51.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SortedSet"><a href="#SortedSet" class="headerlink" title="SortedSet"></a>SortedSet</h1><h2 id="ZADD"><a href="#ZADD" class="headerlink" title="ZADD"></a>ZADD</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZADD key score member [[score member] [score member] ...]</span><br></pre></td></tr></table></figure><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li><p>key 要添加的有序集合的键名称</p></li><li><p>score 要添加的有序集合成员的分数</p></li><li><p>member 要添加到有序集合中的成员</p></li><li><p>[score member] 表示可以同时添加多个成员与对应分支的键值对</p><a id="more"></a><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>将一个或多个 <code>member</code> 元素及其 <code>score</code> 值加入到有序集 <code>key</code> 当中。<br>如果某个 <code>member</code> 已经是有序集的成员，那么更新这个 <code>member</code> 的 <code>score</code> 值，并通过重新插入这个 <code>member</code> 元素，来保证该 <code>member</code> 在正确的位置上。<br><code>score</code> 值可以是整数值或双精度浮点数。<br>如果 <code>key</code> 不存在，则创建一个空的有序集并执行 <a href="http://redisdoc.com/sorted_set/zadd.html#zadd" target="_blank" rel="noopener">ZADD</a> 操作。<br>当 <code>key</code> 存在但不是有序集类型时，返回一个错误。</p><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>O(M*log(N))， <code>N</code> 是有序集的基数， <code>M</code> 为成功添加的新成员的数量。</p><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>被成功添加的新成员的数量，不包括那些被更新的、已经存在的成员。</p><h3 id="示例图片"><a href="#示例图片" class="headerlink" title="示例图片"></a>示例图片</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548210174303-aec12a70-879d-49ce-8d29-424592cf0e1e.png#align=left&amp;display=inline&amp;height=389&amp;linkTarget=_blank&amp;name=zadd.png&amp;originHeight=389&amp;originWidth=655&amp;size=21589&amp;width=655" alt="zadd.png"></p></li></ul><hr><h2 id="ZCARD"><a href="#ZCARD" class="headerlink" title="ZCARD"></a>ZCARD</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZCARD key</span><br></pre></td></tr></table></figure><h4 id="参数说明-1"><a href="#参数说明-1" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称<h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 的基数。<h3 id="时间复杂度-1"><a href="#时间复杂度-1" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(1)<h3 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h3>当 <code>key</code> 存在且是有序集类型时，返回有序集的基数。<br>当 <code>key</code> 不存在时，返回 <code>0</code> 。<h3 id="示例图片-1"><a href="#示例图片-1" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548210351131-c5cb0e5b-db41-4a0f-bd9a-e4f8e8df187f.png#align=left&amp;display=inline&amp;height=121&amp;linkTarget=_blank&amp;name=zcard.png&amp;originHeight=121&amp;originWidth=688&amp;size=10745&amp;width=688" alt="zcard.png"></li></ul><hr><h2 id="ZCOUNT"><a href="#ZCOUNT" class="headerlink" title="ZCOUNT"></a>ZCOUNT</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZCOUNT key min max</span><br></pre></td></tr></table></figure><h4 id="参数说明-2"><a href="#参数说明-2" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称</li><li>min 有序集合中score的最小取值</li><li>max 有序集合中score的最大取值<h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中， <code>score</code> 值在 <code>min</code> 和 <code>max</code> 之间(默认包括 <code>score</code> 值等于 <code>min</code> 或 <code>max</code> )的成员的数量。<h3 id="时间复杂度-2"><a href="#时间复杂度-2" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N))， <code>N</code> 为有序集的基数。<h3 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h3><code>score</code> 值在 <code>min</code> 和 <code>max</code> 之间的成员的数量。<h3 id="示例图片-2"><a href="#示例图片-2" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548210557964-28cefb2d-5a3c-4280-99c5-d725ca0b9f8a.png#align=left&amp;display=inline&amp;height=223&amp;linkTarget=_blank&amp;name=zcount.png&amp;originHeight=223&amp;originWidth=651&amp;size=10530&amp;width=651" alt="zcount.png"></li></ul><hr><h2 id="ZINCRBY"><a href="#ZINCRBY" class="headerlink" title="ZINCRBY"></a>ZINCRBY</h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZINCRBY key increment member</span><br></pre></td></tr></table></figure><h4 id="参数说明-3"><a href="#参数说明-3" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称</li><li>increment 对有序集合成员的score值要操作的增量</li><li>member 要操作的有序集合的成员<h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3>为有序集 <code>key</code> 的成员 <code>member</code> 的 <code>score</code> 值加上增量 <code>increment</code> 。<br>可以通过传递一个负数值 <code>increment</code> ，让 <code>score</code> 减去相应的值，比如 <code>ZINCRBY key -5 member</code> ，就是让 <code>member</code> 的 <code>score</code> 值减去 <code>5</code> 。<br>当 <code>key</code> 不存在，或 <code>member</code> 不是 <code>key</code> 的成员时， <code>ZINCRBY key increment member</code> 等同于 <code>ZADD key increment member</code> 。<br>当 <code>key</code> 不是有序集类型时，返回一个错误。<br><code>score</code> 值可以是整数值或双精度浮点数。<h3 id="时间复杂度-3"><a href="#时间复杂度-3" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N))<h3 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h3><code>member</code> 成员的新 <code>score</code> 值，以字符串形式表示。<h3 id="示例图片-3"><a href="#示例图片-3" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548210763810-df560811-3585-42be-b303-946b9a99f46a.png#align=left&amp;display=inline&amp;height=150&amp;linkTarget=_blank&amp;name=zincrby.png&amp;originHeight=150&amp;originWidth=742&amp;size=13227&amp;width=742" alt="zincrby.png"></li></ul><hr><h2 id="ZRANGE"><a href="#ZRANGE" class="headerlink" title="ZRANGE"></a>ZRANGE</h2><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANGE key start stop [WITHSCORES]</span><br></pre></td></tr></table></figure><h4 id="参数说明-4"><a href="#参数说明-4" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称</li><li>start 有序集合成员下标的起始值，0表示第一个成员</li><li>stop 有序集合成员下标的结束值，-1表示最后一个成员</li><li>[WITHSCORES] 可选项，表示查询有序集合成员时是否同时返回成员的score值<h3 id="作用-4"><a href="#作用-4" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中，指定区间内的成员。<br>其中成员的位置按 <code>score</code> 值递增(从小到大)来排序。<br>具有相同 <code>score</code> 值的成员按字典序(<a href="http://en.wikipedia.org/wiki/Lexicographical_order" target="_blank" rel="noopener">lexicographical order</a> )来排列。<br>如果你需要成员按 <code>score</code> 值递减(从大到小)来排列，请使用 <a href="http://redisdoc.com/sorted_set/zrevrange.html#zrevrange" target="_blank" rel="noopener">ZREVRANGE</a> 命令。<br>下标参数 <code>start</code> 和 <code>stop</code> 都以 <code>0</code> 为底，也就是说，以 <code>0</code> 表示有序集第一个成员，以 <code>1</code> 表示有序集第二个成员，以此类推。<br>你也可以使用负数下标，以 <code>-1</code> 表示最后一个成员， <code>-2</code> 表示倒数第二个成员，以此类推。<br>超出范围的下标并不会引起错误。<br>比如说，当 <code>start</code> 的值比有序集的最大下标还要大，或是 <code>start &gt; stop</code> 时， <a href="http://redisdoc.com/sorted_set/zrange.html#zrange" target="_blank" rel="noopener">ZRANGE</a> 命令只是简单地返回一个空列表。<br>另一方面，假如 <code>stop</code> 参数的值比有序集的最大下标还要大，那么 Redis 将 <code>stop</code> 当作最大下标来处理。<br>可以通过使用 <code>WITHSCORES</code> 选项，来让成员和它的 <code>score</code> 值一并返回，返回列表以 <code>value1,score1, ..., valueN,scoreN</code> 的格式表示。<br>客户端库可能会返回一些更复杂的数据类型，比如数组、元组等。<h3 id="时间复杂度-4"><a href="#时间复杂度-4" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数，而 <code>M</code> 为结果集的基数。<h3 id="返回值-4"><a href="#返回值-4" class="headerlink" title="返回值"></a>返回值</h3>指定区间内，带有 <code>score</code> 值(可选)的有序集成员的列表。<h3 id="示例图片-4"><a href="#示例图片-4" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548211162394-9a971c6f-b603-4b08-a692-c0672f6934f1.png#align=left&amp;display=inline&amp;height=597&amp;linkTarget=_blank&amp;name=zrange.png&amp;originHeight=627&amp;originWidth=783&amp;size=37327&amp;width=746" alt="zrange.png"></li></ul><hr><h2 id="ZRANGEBYSCORE"><a href="#ZRANGEBYSCORE" class="headerlink" title="ZRANGEBYSCORE"></a>ZRANGEBYSCORE</h2><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]</span><br></pre></td></tr></table></figure><h4 id="参数说明-5"><a href="#参数说明-5" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称</li><li>min 有序集合成员score的最小取值</li><li>max 有序集合成员score的最大取值</li><li>[WITHSCORES] 查询结果是否同时返回符合条件成员的score值</li><li>[LIMIT offset count] 对查询的结果集进行数量限制，offset表示结果集的起始位置，count表示取出结果集的几个结果，例如结果集是[1,2,3]，limit 0 2，则最终结果是[1,2]<h3 id="作用-5"><a href="#作用-5" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中，所有 <code>score</code> 值介于 <code>min</code> 和 <code>max</code> 之间(包括等于 <code>min</code> 或 <code>max</code> )的成员。有序集成员按 <code>score</code> 值递增(从小到大)次序排列。<br>具有相同 <code>score</code> 值的成员按字典序(<a href="http://en.wikipedia.org/wiki/Lexicographical_order" target="_blank" rel="noopener">lexicographical order</a>)来排列(该属性是有序集提供的，不需要额外的计算)。<br>可选的 <code>LIMIT</code> 参数指定返回结果的数量及区间(就像SQL中的 <code>SELECT LIMIT offset, count</code> )，注意当 <code>offset</code> 很大时，定位 <code>offset</code> 的操作可能需要遍历整个有序集，此过程最坏复杂度为 O(N) 时间。<br>可选的 <code>WITHSCORES</code> 参数决定结果集是单单返回有序集的成员，还是将有序集成员及其 <code>score</code> 值一起返回。<br>该选项自 Redis 2.0 版本起可用。<h4 id="区间"><a href="#区间" class="headerlink" title="区间"></a>区间</h4><code>min</code> 和 <code>max</code> 可以是 <code>-inf</code> 和 <code>+inf</code> ，这样一来，你就可以在不知道有序集的最低和最高 <code>score</code> 值的情况下，使用 <a href="http://redisdoc.com/sorted_set/zrangebyscore.html#zrangebyscore" target="_blank" rel="noopener">ZRANGEBYSCORE</a> 这类命令。<br>默认情况下，区间的取值使用<a href="http://zh.wikipedia.org/wiki/%E5%8D%80%E9%96%93" target="_blank" rel="noopener">闭区间</a> (小于等于或大于等于)，你也可以通过给参数前增加 <code>(</code> 符号来使用可选的<a href="http://zh.wikipedia.org/wiki/%E5%8D%80%E9%96%93" target="_blank" rel="noopener">开区间</a> (小于或大于)。<h3 id="时间复杂度-5"><a href="#时间复杂度-5" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数， <code>M</code> 为被结果集的基数。<h3 id="返回值-5"><a href="#返回值-5" class="headerlink" title="返回值"></a>返回值</h3>指定区间内，带有 <code>score</code> 值(可选)的有序集成员的列表。<h3 id="示例图片-5"><a href="#示例图片-5" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548211596435-a3af2df2-5a2d-4b5a-ac83-c1632ff32726.png#align=left&amp;display=inline&amp;height=745&amp;linkTarget=_blank&amp;name=zrangebyscore.png&amp;originHeight=752&amp;originWidth=753&amp;size=37070&amp;width=746" alt="zrangebyscore.png"></li></ul><hr><h2 id="ZRANK"><a href="#ZRANK" class="headerlink" title="ZRANK"></a>ZRANK</h2><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANK key member</span><br></pre></td></tr></table></figure><h4 id="参数说明-6"><a href="#参数说明-6" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key 有序集合的键名称</li><li>member 要查询的有序集合中的成员<h3 id="作用-6"><a href="#作用-6" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中成员 <code>member</code> 的排名。其中有序集成员按 <code>score</code> 值递增(从小到大)顺序排列。<br>排名以 <code>0</code> 为底，也就是说， <code>score</code> 值最小的成员排名为 <code>0</code> 。<br>使用 <a href="http://redisdoc.com/sorted_set/zrevrank.html#zrevrank" target="_blank" rel="noopener">ZREVRANK</a> 命令可以获得成员按 <code>score</code> 值递减(从大到小)排列的排名。<h3 id="时间复杂度-6"><a href="#时间复杂度-6" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N))<h3 id="返回值-6"><a href="#返回值-6" class="headerlink" title="返回值"></a>返回值</h3>如果 <code>member</code> 是有序集 <code>key</code> 的成员，返回 <code>member</code> 的排名。<br>如果 <code>member</code> 不是有序集 <code>key</code> 的成员，返回 <code>nil</code> 。<h3 id="示例图片-6"><a href="#示例图片-6" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548211757394-f37b3c02-a377-4da7-989f-b957962839c6.png#align=left&amp;display=inline&amp;height=195&amp;linkTarget=_blank&amp;name=zrank.png&amp;originHeight=195&amp;originWidth=619&amp;size=12348&amp;width=619" alt="zrank.png"></li></ul><hr><h2 id="ZREM"><a href="#ZREM" class="headerlink" title="ZREM"></a>ZREM</h2><h3 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREM key member [member ...]</span><br></pre></td></tr></table></figure><h4 id="参数说明-7"><a href="#参数说明-7" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>member    要删除的有序集合的成员</li><li>[member …] 可以同时删除多个成员<h3 id="作用-7"><a href="#作用-7" class="headerlink" title="作用"></a>作用</h3>移除有序集 <code>key</code> 中的一个或多个成员，不存在的成员将被忽略。<br>当 <code>key</code> 存在但不是有序集类型时，返回一个错误。<h3 id="时间复杂度-7"><a href="#时间复杂度-7" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(M*log(N))， <code>N</code> 为有序集的基数， <code>M</code> 为被成功移除的成员的数量。<h3 id="返回值-7"><a href="#返回值-7" class="headerlink" title="返回值"></a>返回值</h3>被成功移除的成员的数量，不包括被忽略的成员。<h3 id="示例图片-7"><a href="#示例图片-7" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548212010774-29bdc68e-d2cc-4930-8fbc-4da1efaabb3b.png#align=left&amp;display=inline&amp;height=190&amp;linkTarget=_blank&amp;name=zrem.png&amp;originHeight=190&amp;originWidth=680&amp;size=14473&amp;width=680" alt="zrem.png"></li></ul><hr><h2 id="ZREMRANGEBYRANK"><a href="#ZREMRANGEBYRANK" class="headerlink" title="ZREMRANGEBYRANK"></a>ZREMRANGEBYRANK</h2><h3 id="语法-8"><a href="#语法-8" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREMRANGEBYRANK key start stop</span><br></pre></td></tr></table></figure><h4 id="参数说明-8"><a href="#参数说明-8" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>start    有序集合成员的下标起始值</li><li>stop    有序集合成员的下标结束值<h3 id="作用-8"><a href="#作用-8" class="headerlink" title="作用"></a>作用</h3>移除有序集 <code>key</code> 中，指定排名(rank)区间内的所有成员。<br>区间分别以下标参数 <code>start</code> 和 <code>stop</code> 指出，包含 <code>start</code> 和 <code>stop</code> 在内。<br>下标参数 <code>start</code> 和 <code>stop</code> 都以 <code>0</code> 为底，也就是说，以 <code>0</code> 表示有序集第一个成员，以 <code>1</code> 表示有序集第二个成员，以此类推。<br>你也可以使用负数下标，以 <code>-1</code> 表示最后一个成员， <code>-2</code> 表示倒数第二个成员，以此类推。<h3 id="时间复杂度-8"><a href="#时间复杂度-8" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数，而 <code>M</code> 为被移除成员的数量。<h3 id="返回值-8"><a href="#返回值-8" class="headerlink" title="返回值"></a>返回值</h3>被移除成员的数量。<h3 id="示例图片-8"><a href="#示例图片-8" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548212194944-d8ebf6ca-bf12-469d-a0d7-1e79104fa72b.png#align=left&amp;display=inline&amp;height=299&amp;linkTarget=_blank&amp;name=zremrangebyrank.png&amp;originHeight=299&amp;originWidth=540&amp;size=14154&amp;width=540" alt="zremrangebyrank.png"></li></ul><hr><h2 id="ZREMRANGEBYSCORE"><a href="#ZREMRANGEBYSCORE" class="headerlink" title="ZREMRANGEBYSCORE"></a>ZREMRANGEBYSCORE</h2><h3 id="语法-9"><a href="#语法-9" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREMRANGEBYSCORE key min max</span><br></pre></td></tr></table></figure><h4 id="参数说明-9"><a href="#参数说明-9" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>min   有序集合score的最小取值 </li><li>max    有序集合score的最大取值<h3 id="作用-9"><a href="#作用-9" class="headerlink" title="作用"></a>作用</h3>移除有序集 <code>key</code> 中，所有 <code>score</code> 值介于 <code>min</code> 和 <code>max</code> 之间(包括等于 <code>min</code> 或 <code>max</code> )的成员。<br>自版本2.1.6开始， <code>score</code> 值等于 <code>min</code> 或 <code>max</code> 的成员也可以不包括在内，详情请参见 <a href="http://redisdoc.com/sorted_set/zrangebyscore.html#zrangebyscore" target="_blank" rel="noopener">ZRANGEBYSCORE</a> 命令。<h3 id="时间复杂度-9"><a href="#时间复杂度-9" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数，而 <code>M</code> 为被移除成员的数量。<h3 id="返回值-9"><a href="#返回值-9" class="headerlink" title="返回值"></a>返回值</h3>被移除成员的数量。<h3 id="示例图片-9"><a href="#示例图片-9" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548212562199-eed183c1-35a1-4f1e-965b-14a90ed240f8.png#align=left&amp;display=inline&amp;height=373&amp;linkTarget=_blank&amp;name=zremrangebyscore.png&amp;originHeight=373&amp;originWidth=563&amp;size=17948&amp;width=563" alt="zremrangebyscore.png"></li></ul><hr><h2 id="ZREMRANGEBYLEX"><a href="#ZREMRANGEBYLEX" class="headerlink" title="ZREMRANGEBYLEX"></a>ZREMRANGEBYLEX</h2><h3 id="语法-10"><a href="#语法-10" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREMRANGEBYLEX key min max</span><br></pre></td></tr></table></figure><h4 id="参数说明-10"><a href="#参数说明-10" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>min    有序集合中成员下标的起始值</li><li>max    有序集合中成员下标的结束值  <h3 id="作用-10"><a href="#作用-10" class="headerlink" title="作用"></a>作用</h3>对于一个所有成员的分值都相同的有序集合键 <code>key</code> 来说， 这个命令会移除该集合中， 成员介于 <code>min</code> 和 <code>max</code> 范围内的所有元素。<h3 id="时间复杂度-10"><a href="#时间复杂度-10" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， 其中 N 为有序集合的元素数量， 而 M 则为被移除的元素数量。<h3 id="返回值-10"><a href="#返回值-10" class="headerlink" title="返回值"></a>返回值</h3>整数回复：被移除的元素数量。<h3 id="示例图片-10"><a href="#示例图片-10" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548212737241-34cb7bec-2c1e-45c2-8306-a1eb96cd33a1.png#align=left&amp;display=inline&amp;height=269&amp;linkTarget=_blank&amp;name=zremrangebylex.png&amp;originHeight=269&amp;originWidth=620&amp;size=14487&amp;width=620" alt="zremrangebylex.png"></li></ul><hr><h2 id="ZREVRANGE"><a href="#ZREVRANGE" class="headerlink" title="ZREVRANGE"></a>ZREVRANGE</h2><h3 id="语法-11"><a href="#语法-11" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREVRANGE key start stop [WITHSCORES]</span><br></pre></td></tr></table></figure><h4 id="参数说明-11"><a href="#参数说明-11" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>start    有序集合成员下标起始值</li><li>stop    有序集合成员下标结束值</li><li>[WITHSCORES]    是否返回结果集中的成员对应score值<h3 id="作用-11"><a href="#作用-11" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中，指定区间内的成员。<br>其中成员的位置按 <code>score</code> 值递减(从大到小)来排列。<br>具有相同 <code>score</code> 值的成员按字典序的逆序(<a href="http://en.wikipedia.org/wiki/Lexicographical_order#Reverse_lexicographic_order" target="_blank" rel="noopener">reverse lexicographical order</a>)排列。<br>除了成员按 <code>score</code> 值递减的次序排列这一点外， <a href="http://redisdoc.com/sorted_set/zrevrange.html#zrevrange" target="_blank" rel="noopener">ZREVRANGE</a> 命令的其他方面和 <a href="http://redisdoc.com/sorted_set/zrange.html#zrange" target="_blank" rel="noopener">ZRANGE</a> 命令一样。<h3 id="时间复杂度-11"><a href="#时间复杂度-11" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数，而 <code>M</code> 为结果集的基数。<h3 id="返回值-11"><a href="#返回值-11" class="headerlink" title="返回值"></a>返回值</h3>指定区间内，带有 <code>score</code> 值(可选)的有序集成员的列表。<h3 id="示例图片-11"><a href="#示例图片-11" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548212927373-49b25b90-326d-4dda-8f79-213c43f59a38.png#align=left&amp;display=inline&amp;height=297&amp;linkTarget=_blank&amp;name=zrevrange.png&amp;originHeight=297&amp;originWidth=610&amp;size=12348&amp;width=610" alt="zrevrange.png"></li></ul><hr><h2 id="ZREVRANGEBYSCORE"><a href="#ZREVRANGEBYSCORE" class="headerlink" title="ZREVRANGEBYSCORE"></a>ZREVRANGEBYSCORE</h2><h3 id="语法-12"><a href="#语法-12" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]</span><br></pre></td></tr></table></figure><h4 id="参数说明-12"><a href="#参数说明-12" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>max    有序集合中score的最小取值</li><li>min    有序集合中score的最大取值</li><li>[WITHSCORES]    结果集中是否返回有序集合成员对应的score值</li><li>[LIMIT offset count]    是否对返回的结果集进行数量限制<h3 id="作用-12"><a href="#作用-12" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中， <code>score</code> 值介于 <code>max</code> 和 <code>min</code> 之间(默认包括等于 <code>max</code> 或 <code>min</code> )的所有的成员。有序集成员按 <code>score</code> 值递减(从大到小)的次序排列。<br>具有相同 <code>score</code> 值的成员按字典序的逆序(<a href="http://en.wikipedia.org/wiki/Lexicographical_order" target="_blank" rel="noopener">reverse lexicographical order</a> )排列。<br>除了成员按 <code>score</code> 值递减的次序排列这一点外， <a href="http://redisdoc.com/sorted_set/zrevrangebyscore.html#zrevrangebyscore" target="_blank" rel="noopener">ZREVRANGEBYSCORE</a> 命令的其他方面和 <a href="http://redisdoc.com/sorted_set/zrangebyscore.html#zrangebyscore" target="_blank" rel="noopener">ZRANGEBYSCORE</a> 命令一样。<h3 id="时间复杂度-12"><a href="#时间复杂度-12" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， <code>N</code> 为有序集的基数， <code>M</code> 为结果集的基数。<h3 id="返回值-12"><a href="#返回值-12" class="headerlink" title="返回值"></a>返回值</h3>指定区间内，带有 <code>score</code> 值(可选)的有序集成员的列表。<h3 id="示例图片-12"><a href="#示例图片-12" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548213446201-cf42c9d8-178c-48d5-920d-792ed382a21c.png#align=left&amp;display=inline&amp;height=211&amp;linkTarget=_blank&amp;name=zrevrangebyscore.png&amp;originHeight=211&amp;originWidth=655&amp;size=10922&amp;width=655" alt="zrevrangebyscore.png"></li></ul><hr><h2 id="ZREVRANK"><a href="#ZREVRANK" class="headerlink" title="ZREVRANK"></a>ZREVRANK</h2><h3 id="语法-13"><a href="#语法-13" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZREVRANK key member</span><br></pre></td></tr></table></figure><h4 id="参数说明-13"><a href="#参数说明-13" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>member    有序集合中要查询的成员<h3 id="作用-13"><a href="#作用-13" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中成员 <code>member</code> 的排名。其中有序集成员按 <code>score</code> 值递减(从大到小)排序。<br>排名以 <code>0</code> 为底，也就是说， <code>score</code> 值最大的成员排名为 <code>0</code> 。<br>使用 <a href="http://redisdoc.com/sorted_set/zrank.html#zrank" target="_blank" rel="noopener">ZRANK</a> 命令可以获得成员按 <code>score</code> 值递增(从小到大)排列的排名。<h3 id="时间复杂度-13"><a href="#时间复杂度-13" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N))<h3 id="返回值-13"><a href="#返回值-13" class="headerlink" title="返回值"></a>返回值</h3>如果 <code>member</code> 是有序集 <code>key</code> 的成员，返回 <code>member</code> 的排名。<br>如果 <code>member</code> 不是有序集 <code>key</code> 的成员，返回 <code>nil</code> 。<h3 id="示例图片-13"><a href="#示例图片-13" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548213577873-10c78be0-eb88-499e-9172-61de6b9c01ab.png#align=left&amp;display=inline&amp;height=224&amp;linkTarget=_blank&amp;name=zrevrank.png&amp;originHeight=224&amp;originWidth=679&amp;size=12288&amp;width=679" alt="zrevrank.png"></li></ul><hr><h2 id="ZSCORE"><a href="#ZSCORE" class="headerlink" title="ZSCORE"></a>ZSCORE</h2><h3 id="语法-14"><a href="#语法-14" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSCORE key member</span><br></pre></td></tr></table></figure><h4 id="参数说明-14"><a href="#参数说明-14" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>member    要查询的有序集合中的成员<h3 id="作用-14"><a href="#作用-14" class="headerlink" title="作用"></a>作用</h3>返回有序集 <code>key</code> 中，成员 <code>member</code> 的 <code>score</code> 值。<br>如果 <code>member</code> 元素不是有序集 <code>key</code> 的成员，或 <code>key</code> 不存在，返回 <code>nil</code> 。<h3 id="时间复杂度-14"><a href="#时间复杂度-14" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(1)<h3 id="返回值-14"><a href="#返回值-14" class="headerlink" title="返回值"></a>返回值</h3><code>member</code> 成员的 <code>score</code> 值，以字符串形式表示。<h3 id="示例图片-14"><a href="#示例图片-14" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548213780395-01149e73-4c86-4c1c-bcf5-5f06fe31467f.png#align=left&amp;display=inline&amp;height=284&amp;linkTarget=_blank&amp;name=zscore.png&amp;originHeight=284&amp;originWidth=621&amp;size=15488&amp;width=621" alt="zscore.png"></li></ul><hr><h2 id="ZUNIONSTORE"><a href="#ZUNIONSTORE" class="headerlink" title="ZUNIONSTORE"></a>ZUNIONSTORE</h2><h3 id="语法-15"><a href="#语法-15" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]</span><br></pre></td></tr></table></figure><h4 id="参数说明-15"><a href="#参数说明-15" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>destination    结果集保存的目标集合</li><li>numkeys    操作集合的数量</li><li>key    要操作的有序集合的键名称</li><li>[key …]    多个有序集合的键名称</li><li>[WEIGHTS weight [weight …]]    是否在聚合之前将有序集合的成员score值乘对应的乘法因子，默认为1</li><li>[AGGREGATE SUM|MIN|MAX]    结果并集的聚合方式<h3 id="作用-15"><a href="#作用-15" class="headerlink" title="作用"></a>作用</h3>计算给定的一个或多个有序集的并集，其中给定 <code>key</code> 的数量必须以 <code>numkeys</code> 参数指定，并将该并集(结果集)储存到 <code>destination</code> 。<br>默认情况下，结果集中某个成员的 <code>score</code> 值是所有给定集下该成员 <code>score</code> 值之 _和_ 。<h4 id="WEIGHTS"><a href="#WEIGHTS" class="headerlink" title="WEIGHTS"></a><strong>WEIGHTS</strong></h4>使用 <code>WEIGHTS</code> 选项，你可以为 _每个_分别_ 指定一个乘法因子(multiplication factor)，每个给定有序集的所有成员的 <code>score</code> 值在传递给聚合函数(aggregation function)之前都要先乘以该有序集的因子。<br>如果没有指定 <code>WEIGHTS</code> 选项，乘法因子默认设置为 <code>1</code> 。<br><strong>AGGREGATE</strong><br>使用 <code>AGGREGATE</code> 选项，你可以指定并集的结果集的聚合方式。<br>默认使用的参数 <code>SUM</code> ，可以将所有集合中某个成员的 <code>score</code> 值之 _和_ 作为结果集中该成员的 <code>score</code> 值；使用参数 <code>MIN</code> ，可以将所有集合中某个成员的 _最小_ <code>score</code> 值作为结果集中该成员的 <code>score</code> 值；而参数 <code>MAX</code> 则是将所有集合中某个成员的 _最大_ <code>score</code> 值作为结果集中该成员的 <code>score</code> 值。<h3 id="时间复杂度-15"><a href="#时间复杂度-15" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(N)+O(M log(M))， <code>N</code> 为给定有序集基数的总和， <code>M</code> 为结果集的基数。<h3 id="返回值-15"><a href="#返回值-15" class="headerlink" title="返回值"></a>返回值</h3>保存到 <code>destination</code> 的结果集的基数。<h3 id="示例图片-15"><a href="#示例图片-15" class="headerlink" title="示例图片"></a>示例图片</h3></li><li>查询成员成绩之和</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214135873-ce165051-72c0-4897-a997-97cf47475049.png#align=left&amp;display=inline&amp;height=491&amp;linkTarget=_blank&amp;name=zunionscore.png&amp;originHeight=521&amp;originWidth=791&amp;size=27204&amp;width=746" alt="zunionscore.png"></p><ul><li>查询成员的优秀成绩</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214339905-ddcacae9-1b35-4ea4-9bab-14d2928aed6f.png#align=left&amp;display=inline&amp;height=394&amp;linkTarget=_blank&amp;name=zunionscore%20with%20max.png&amp;originHeight=466&amp;originWidth=883&amp;size=25719&amp;width=746" alt="zunionscore with max.png"></p><ul><li>查询成员的较差成绩</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214363681-3403a7a5-02b4-45ee-8ad5-30fd6e18b452.png#align=left&amp;display=inline&amp;height=409&amp;linkTarget=_blank&amp;name=zunionscore%20with%20min.png&amp;originHeight=465&amp;originWidth=848&amp;size=25867&amp;width=746" alt="zunionscore with min.png"></p><ul><li>使用乘法因子完成员工的年终奖的计算</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214396973-b7272d1a-ab44-45f8-9a4d-cce2b4355690.png#align=left&amp;display=inline&amp;height=420&amp;linkTarget=_blank&amp;name=zunionscore%20with%20weights.png&amp;originHeight=494&amp;originWidth=877&amp;size=29392&amp;width=746" alt="zunionscore with weights.png"></p><ul><li>计算出员工在每个项目拿到的年终奖的较大值与较小值</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214458995-3af31eb3-6d07-4c63-b409-7aa1b364e56a.png#align=left&amp;display=inline&amp;height=608&amp;linkTarget=_blank&amp;name=zunionscore%20with%20weights%20and%20max%20min.png&amp;originHeight=625&amp;originWidth=767&amp;size=34146&amp;width=746" alt="zunionscore with weights and max min.png"></p><hr><h2 id="ZINTERSTORE"><a href="#ZINTERSTORE" class="headerlink" title="ZINTERSTORE"></a>ZINTERSTORE</h2><h3 id="语法-16"><a href="#语法-16" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZINTERSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]</span><br></pre></td></tr></table></figure><h4 id="参数说明-16"><a href="#参数说明-16" class="headerlink" title="参数说明"></a>参数说明</h4><p>与ZUNIONSTORE参数意义一致</p><h3 id="作用-16"><a href="#作用-16" class="headerlink" title="作用"></a>作用</h3><p>计算给定的一个或多个有序集的交集，其中给定 <code>key</code> 的数量必须以 <code>numkeys</code> 参数指定，并将该交集(结果集)储存到 <code>destination</code> 。<br>默认情况下，结果集中某个成员的 <code>score</code> 值是所有给定集下该成员 <code>score</code> 值之和.</p><h3 id="时间复杂度-16"><a href="#时间复杂度-16" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>O(N<em>K)+O(M</em>log(M))， <code>N</code> 为给定 <code>key</code> 中基数最小的有序集， <code>K</code> 为给定有序集的数量， <code>M</code> 为结果集的基数。</p><h3 id="返回值-16"><a href="#返回值-16" class="headerlink" title="返回值"></a>返回值</h3><p>保存到 <code>destination</code> 的结果集的基数。</p><h3 id="示例图片-16"><a href="#示例图片-16" class="headerlink" title="示例图片"></a>示例图片</h3><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214777821-c2dc1489-09d3-4a1c-bec5-c55d365220eb.png#align=left&amp;display=inline&amp;height=393&amp;linkTarget=_blank&amp;name=zinter.png&amp;originHeight=461&amp;originWidth=874&amp;size=22672&amp;width=746" alt="zinter.png"></p><ul><li><br></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548214814800-937a47b3-9221-4aa7-b5fc-5bc4f1a8f6d3.png#align=left&amp;display=inline&amp;height=550&amp;linkTarget=_blank&amp;name=zinter%20with%20max%20min.png&amp;originHeight=629&amp;originWidth=853&amp;size=29984&amp;width=746" alt="zinter with max min.png"></p><hr><h2 id="ZRANGEBYLEX"><a href="#ZRANGEBYLEX" class="headerlink" title="ZRANGEBYLEX"></a>ZRANGEBYLEX</h2><h3 id="语法-17"><a href="#语法-17" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANGEBYLEX key min max [LIMIT offset count]</span><br></pre></td></tr></table></figure><h4 id="参数说明-17"><a href="#参数说明-17" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>min    有序集合成员下标的起始值</li><li>max    有序集合成员下标的结束值</li><li>[LIMIT offset count]    结果集限制<h3 id="作用-17"><a href="#作用-17" class="headerlink" title="作用"></a>作用</h3>当有序集合的所有成员都具有相同的分值时， 有序集合的元素会根据成员的字典序（lexicographical ordering）来进行排序， 而这个命令则可以返回给定的有序集合键 <code>key</code> 中， 值介于 <code>min</code> 和 <code>max</code> 之间的成员。<br>如果有序集合里面的成员带有不同的分值， 那么命令返回的结果是未指定的（unspecified）。<br>命令会使用 C 语言的 <code>memcmp()</code> 函数， 对集合中的每个成员进行逐个字节的对比（byte-by-byte compare）， 并按照从低到高的顺序， 返回排序后的集合成员。 如果两个字符串有一部分内容是相同的话， 那么命令会认为较长的字符串比较短的字符串要大。<br>可选的 <code>LIMIT offset count</code> 参数用于获取指定范围内的匹配元素 （就像 SQL 中的 <code>SELECT LIMIT offset count</code> 语句）。 需要注意的一点是， 如果 <code>offset</code> 参数的值非常大的话， 那么命令在返回结果之前， 需要先遍历至 <code>offset</code> 所指定的位置， 这个操作会为命令加上最多 O(N) 复杂度。<h4 id="指定范围区间"><a href="#指定范围区间" class="headerlink" title="指定范围区间"></a>指定范围区间</h4>合法的 <code>min</code> 和 <code>max</code> 参数必须包含 <code>(</code> 或者 <code>[</code> ， 其中 <code>(</code> 表示开区间（指定的值不会被包含在范围之内）， 而 <code>[</code> 则表示闭区间（指定的值会被包含在范围之内）。<br>特殊值 <code>+</code> 和 <code>-</code> 在 <code>min</code> 参数以及 <code>max</code> 参数中具有特殊的意义， 其中 <code>+</code> 表示正无限， 而 <code>-</code> 表示负无限。 因此， 向一个所有成员的分值都相同的有序集合发送命令 <code>ZRANGEBYLEX &lt;zset&gt; - +</code> ， 命令将返回有序集合中的所有元素。<h3 id="时间复杂度-17"><a href="#时间复杂度-17" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N)+M)， 其中 N 为有序集合的元素数量， 而 M 则是命令返回的元素数量。 如果 M 是一个常数（比如说，用户总是使用 <code>LIMIT</code> 参数来返回最先的 10 个元素）， 那么命令的复杂度也可以看作是 O(log(N)) 。<h3 id="返回值-17"><a href="#返回值-17" class="headerlink" title="返回值"></a>返回值</h3>数组回复：一个列表，列表里面包含了有序集合在指定范围内的成员。<h3 id="示例图片-17"><a href="#示例图片-17" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548215079415-882f04ad-0206-40b5-a476-33f3289b25aa.png#align=left&amp;display=inline&amp;height=508&amp;linkTarget=_blank&amp;name=zrangebylex.png&amp;originHeight=557&amp;originWidth=818&amp;size=27035&amp;width=746" alt="zrangebylex.png"></li></ul><hr><h2 id="ZLEXCOUNT"><a href="#ZLEXCOUNT" class="headerlink" title="ZLEXCOUNT"></a>ZLEXCOUNT</h2><h3 id="语法-18"><a href="#语法-18" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZLEXCOUNT key min max</span><br></pre></td></tr></table></figure><h4 id="参数说明-18"><a href="#参数说明-18" class="headerlink" title="参数说明"></a>参数说明</h4><ul><li>key    有序集合的键名称</li><li>min    有序集合的成员下标起始值</li><li>max    有序集合的成员下标结束值<h3 id="作用-18"><a href="#作用-18" class="headerlink" title="作用"></a>作用</h3>对于一个所有成员的分值都相同的有序集合键 <code>key</code> 来说， 这个命令会返回该集合中， 成员介于 <code>min</code> 和 <code>max</code> 范围内的元素数量。<h3 id="时间复杂度-18"><a href="#时间复杂度-18" class="headerlink" title="时间复杂度"></a>时间复杂度</h3>O(log(N))，其中 N 为有序集合包含的元素数量。<h3 id="返回值-18"><a href="#返回值-18" class="headerlink" title="返回值"></a>返回值</h3>整数回复：指定范围内的元素数量。<h3 id="示例图片-18"><a href="#示例图片-18" class="headerlink" title="示例图片"></a>示例图片</h3><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548215227558-230a2b02-fbe4-4d73-997a-9f42d565481e.png#align=left&amp;display=inline&amp;height=180&amp;linkTarget=_blank&amp;name=zlexcount.png&amp;originHeight=180&amp;originWidth=622&amp;size=10625&amp;width=622" alt="zlexcount.png"></li></ul><hr><h2 id="实战案列"><a href="#实战案列" class="headerlink" title="实战案列"></a>实战案列</h2><h3 id="案列说明"><a href="#案列说明" class="headerlink" title="案列说明"></a>案列说明</h3><p>学校进行期末考试完成后部分科目成绩公布如下</p><table><thead><tr><th>姓名</th><th>英语</th><th>数学</th></tr></thead><tbody><tr><td>Alice</td><td>89</td><td>97</td></tr><tr><td>brown</td><td>91</td><td>68</td></tr><tr><td>curry</td><td>76</td><td>99</td></tr><tr><td>danny</td><td>98</td><td>97</td></tr><tr><td>jhon</td><td>89</td><td>97</td></tr><tr><td>klay</td><td>79</td><td>68</td></tr></tbody></table><p><strong>要求：</strong></p><ul><li>将学生的科目成绩分别存储在不同的有序集合中；</li><li>成绩校验后发现curry的英文成绩少计算了13分，在学生的英文成绩记录中进行更正；</li><li>计算英语成绩在90分以上的同学数量；</li><li>列出数学成绩低于80分的同学，并要求知道他们的具体分数；</li><li>将英语成绩按照从低到高的排序方式进行排列，然后将数学成绩按照从高到底的排序方式排列；</li><li>计算所有学生的英语与数学成绩的总和，并且需要根据成绩进行排名；</li><li>查询klay的数学成绩</li><li>danny英文考试作弊，移出本次的成绩清单，并重新计算学生总成绩与排名；</li><li>查询Alice的总成绩的班级排名</li></ul><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><ul><li>使用<strong>ZADD</strong>进行有序集合新增</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224405615-cba8371c-1bfc-403f-8486-aa8bf308f465.png#align=left&amp;display=inline&amp;height=518&amp;linkTarget=_blank&amp;name=1.png&amp;originHeight=518&amp;originWidth=743&amp;size=21062&amp;width=743" alt="1.png"></p><ul><li>使用 <strong>zincrby </strong>进行键的score值的变更 </li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224419988-b00a4ec5-c45b-4c61-a5ae-83f04954f918.png#align=left&amp;display=inline&amp;height=247&amp;linkTarget=_blank&amp;name=update%20curry%20English.png&amp;originHeight=247&amp;originWidth=568&amp;size=8784&amp;width=568" alt="update curry English.png"></p><ul><li>使用 <strong>zcount </strong>进行有序集合根据score值筛选并统计member数量</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224428919-7cf38bd6-beee-4f9f-abdf-0fc5f86e0646.png#align=left&amp;display=inline&amp;height=235&amp;linkTarget=_blank&amp;name=3.png&amp;originHeight=235&amp;originWidth=494&amp;size=7822&amp;width=494" alt="3.png"></p><ul><li>使用 <strong>zrangebyscore </strong>进行成绩筛选<br><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224439087-64060b18-1bd9-41fd-89d8-8caf6fcc4462.png#align=left&amp;display=inline&amp;height=299&amp;linkTarget=_blank&amp;name=4.png&amp;originHeight=299&amp;originWidth=570&amp;size=10658&amp;width=570" alt="4.png"></li><li><strong>zrevrange</strong>将有序集合按照score倒序排列</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224603426-24a46f07-f296-4d03-a180-21df9e3794d0.png#align=left&amp;display=inline&amp;height=418&amp;linkTarget=_blank&amp;name=5.png&amp;originHeight=418&amp;originWidth=579&amp;size=13222&amp;width=579" alt="5.png"></p><ul><li>使用<strong>zunionscore</strong>求出学生的成绩总和</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224657354-8d08b89d-5801-4052-bf54-4e3380eaf785.png#align=left&amp;display=inline&amp;height=252&amp;linkTarget=_blank&amp;name=6.png&amp;originHeight=252&amp;originWidth=532&amp;size=9078&amp;width=532" alt="6.png"></p><ul><li>使用<strong>zscore</strong>查询member的score值</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224723720-78613ec4-f226-432a-8377-a43c514acd55.png#align=left&amp;display=inline&amp;height=60&amp;linkTarget=_blank&amp;name=7.png&amp;originHeight=60&amp;originWidth=413&amp;size=2552&amp;width=413" alt="7.png"></p><ul><li><strong>zrem</strong>删除有序集合中的member</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224777107-9de35135-5906-484a-8660-68198f73d2fa.png#align=left&amp;display=inline&amp;height=199&amp;linkTarget=_blank&amp;name=8.png&amp;originHeight=199&amp;originWidth=427&amp;size=6948&amp;width=427" alt="8.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224804009-5bc73e58-5e47-422c-8769-1b12f84d8217.png#align=left&amp;display=inline&amp;height=197&amp;linkTarget=_blank&amp;name=8%EF%BC%882%EF%BC%89.png&amp;originHeight=197&amp;originWidth=520&amp;size=8891&amp;width=520" alt="8（2）.png"></p><ul><li><strong>zrank</strong>查询元素在有序集合中的排名</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2019/png/248005/1548224834011-54072867-cd8c-4ed3-a3d7-a71b8c904374.png#align=left&amp;display=inline&amp;height=164&amp;linkTarget=_blank&amp;name=9.png&amp;originHeight=164&amp;originWidth=432&amp;size=6017&amp;width=432" alt="9.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SortedSet&quot;&gt;&lt;a href=&quot;#SortedSet&quot; class=&quot;headerlink&quot; title=&quot;SortedSet&quot;&gt;&lt;/a&gt;SortedSet&lt;/h1&gt;&lt;h2 id=&quot;ZADD&quot;&gt;&lt;a href=&quot;#ZADD&quot; class=&quot;headerlink&quot; title=&quot;ZADD&quot;&gt;&lt;/a&gt;ZADD&lt;/h2&gt;&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ZADD key score member [[score member] [score member] ...]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;参数说明&quot;&gt;&lt;a href=&quot;#参数说明&quot; class=&quot;headerlink&quot; title=&quot;参数说明&quot;&gt;&lt;/a&gt;参数说明&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;key 要添加的有序集合的键名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;score 要添加的有序集合成员的分数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;member 要添加到有序集合中的成员&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[score member] 表示可以同时添加多个成员与对应分支的键值对&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
      <category term="缓存" scheme="http://yoursite.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
</feed>
